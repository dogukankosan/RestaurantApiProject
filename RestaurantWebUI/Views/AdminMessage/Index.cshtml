@{
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}
@using RestaurantWebUI.Dtos.MessageDtos
@model List<ResultMessageDto>
<style>
    .link-style {
        color: #007bff;
        font-weight: 500;
        text-decoration: none;
        transition: color 0.2s ease-in-out, text-decoration 0.2s;
    }

        .link-style:hover {
            color: white !important;
            text-decoration: underline;
            cursor: pointer;
        }
</style>
<title>Admin Mesaj Listesi</title>
<h4 class="card-title">İletişim Mesajları</h4>
<hr />
<div class="row mb-2">
    <div class="col text-right">
        <select id="exportOptions" class="form-control form-control-sm w-100 mb-2 d-md-inline-block">
            <option value="">Dışa Aktar</option>
            <option value="excel">📥 Excel</option>
            <option value="pdf">📄 PDF</option>
            <option value="print">🖨️ Yazdır</option>
        </select>
    </div>
</div>
<div class="table-responsive">
    <table class="table table-hover table-striped table-bordered" id="yourTableId">
        <thead>
            <tr>
                <th>#</th>
                <th>Ad Soyad</th>
                <th>E-Posta</th>
                <th>Telefon</th>
                <th>Konu</th>
                <th>Mesaj</th>
                <th>Tarih</th>
                <th>Okundu</th>
                <th>IP</th>
                <th>Tarayıcı</th>
                <th>Konum</th>
                <th class="no-export">İşlemler</th>
            </tr>
        </thead>
        <tbody>
            @foreach (ResultMessageDto item in Model)
            {
                <tr>
                    <td>@item.MessageID</td>
                    <td>@item.MessageNameSurname</td>
                    <td>
                        <a href="mailto:@item.MessageEmail" title="Mail gönder" class="link-style">
                            @item.MessageEmail
                        </a>
                    </td>
                    <td>
                        <a href="https://wa.me/@item.MessagePhone?.Replace("+", "").Replace(" ", "")"
                           target="_blank"
                           title="WhatsApp ile mesaj gönder"
                           class="link-style">
                            @item.MessagePhone
                        </a>
                    </td>
                    <td>@item.MessageSubject</td>
                    <td>
                        <button class="btn btn-sm btn-outline-secondary"
                                onclick="showFullMessage(`@item.MessageDetails?.Replace("`", "'")`)">
                            Görüntüle
                        </button>
                    </td>
                    <td>@item.MessageSendDate.ToString("dd.MM.yyyy HH:mm")</td>
                    <td>
                        <span class="badge text-white @(item.MessageIsRead ? "bg-success" : "bg-danger") link-style"
                              onclick="updateReadStatus(@item.MessageID)">
                            @(item.MessageIsRead ? "Okundu" : "Bekliyor")
                        </span>
                    </td>
                    <td>@item.WebLogUserIPAdress</td>
                    <td>
                        <span title="@item.WebLogUserInfo">
                            @(item.WebLogUserInfo?.Length > 25 ? item.WebLogUserInfo[..25] + "..." : item.WebLogUserInfo)
                        </span>
                    </td>
                    <td>@item.WebLogUserGeo</td>
                    <td>
                        <button class="btn btn-outline-danger btn-sm" onclick="confirmDelete(@item.MessageID)" title="Sil">
                            <i data-feather="trash-2"></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<script>
    function updateReadStatus(id) {
        fetch(`/AdminMesaj/DurumGuncelle/${id}`, {
            method: 'POST'
        })
        .then(res => res.json())
        .then(data => {
            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Başarılı',
                    text: 'Durum başarıyla güncellendi.',
                    timer: 2000,
                    showConfirmButton: false
                }).then(() => {
                    location.reload();
                });
            } else {
                Swal.fire("Hata", data.message || "Durum güncellenemedi", "error");
            }
        })
        .catch(() => {
            Swal.fire("Hata", "Durum güncellenirken bir sorun oluştu", "error");
        });
    }
</script>
    <script>
        function confirmDelete(id) {
            Swal.fire({
                title: 'Mesaj silinsin mi?',
                text: "Bu işlem geri alınamaz!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Evet, sil',
                cancelButtonText: 'İptal'
            }).then((result) => {
                if (result.isConfirmed) {
                window.location.href = `/AdminMesaj/Sil/${id}`;
                }
            });
        }
        function showFullMessage(message) {
            Swal.fire({
                title: 'Mesaj İçeriği',
                text: message || "Mesaj boş.",
                icon: 'info',
                confirmButtonText: 'Kapat',
                customClass: {
                    popup: 'text-start'
                }
            });
        }
        document.addEventListener('DOMContentLoaded', function () {
            const type = '@TempData["Type"]';
            const message = @Html.Raw(Json.Serialize(TempData["Message"]));
            const navType = performance.getEntriesByType("navigation")[0]?.type;
            if (type && message && navType === "navigate") {
                Swal.fire({
                    icon: type === 'success' ? 'success' : 'error',
                    title: type === 'success' ? 'Başarılı' : 'Hata',
                    text: message,
                    timer: 3000,
                    showConfirmButton: false
                });
            }
            if (window.feather) {
                feather.replace();
            }
        });
    </script>