@using RestaurantWebUI.Dtos.CategoryDtos
@model List<RestaurantWebUI.Dtos.CategoryDtos.ResultCategoryDto>

@if (Model == null || Model.Count == 0)
{
    <section id="menu" class="menu section">
        <div class="container section-title" data-aos="fade-up">
            <h2>Menü</h2>
            <p>Henüz menü bulunmuyor.</p>
        </div>
    </section>
}
else
{
    <section id="menu" class="menu section">
        <div class="container section-title" data-aos="fade-up">
            <h2>Menümüz</h2>
            <p><span>Restoranımızın</span> <span class="description-title">Menüsü</span></p>
        </div>
        <div class="container">
            <ul class="nav nav-tabs d-flex justify-content-center" data-aos="fade-up" data-aos-delay="100">
                @for (int i = 0; i < Model.Count; i++)
                {
                    ResultCategoryDto category = Model[i];
                    string isActive = i == 0 ? "active show" : "";
                    <li class="nav-item">
                        <a class="nav-link @isActive" data-bs-toggle="tab" data-bs-target="#menu-category-@category.CategoryID">
                            <h4>@category.CategoryName</h4>
                        </a>
                    </li>
                }
            </ul>
            <br/>
            <br />
            <br />
            <br />
            <div class="tab-content" data-aos="fade-up" data-aos-delay="200">
                @for (int i = 0; i < Model.Count; i++)
                {
                    ResultCategoryDto category = Model[i];
                    string isActive = i == 0 ? "active show" : "";
                    <div class="tab-pane fade @isActive" id="menu-category-@category.CategoryID">
                        <div class="row gy-5">
                            @await Component.InvokeAsync("ProductsComponentPartial", new { categoryId = category.CategoryID })
                        </div>
                    </div>
                }
            </div>
        </div>
    </section>
}